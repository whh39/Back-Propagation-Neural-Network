#include <iostream>
#include <string.h>
#include <stdio.h>
#include <fstream>
#include <cassert>

#include "BP.h"

using namespace std;

double sample[70][5] =
{
    {	5.5	,	2.3	,	4	,	1.3	,	0	}	,
{	5	,	3.2	,	1.2	,	0.2	,	1	}	,
{	6.4	,	2.9	,	4.3	,	1.3	,	0	}	,
{	5.4	,	3.9	,	1.7	,	0.4	,	1	}	,
{	4.7	,	3.2	,	1.6	,	0.2	,	1	}	,
{	6.4	,	3.2	,	4.5	,	1.5	,	0	}	,
{	6.1	,	2.8	,	4.7	,	1.2	,	0	}	,
{	6.6	,	2.9	,	4.6	,	1.3	,	0	}	,
{	5	,	2	,	3.5	,	1	,	0	}	,
{	4.6	,	3.4	,	1.4	,	0.3	,	1	}	,
{	5.6	,	2.9	,	3.6	,	1.3	,	0	}	,
{	5.4	,	3.4	,	1.5	,	0.4	,	1	}	,
{	4.4	,	3	,	1.3	,	0.2	,	1	}	,
{	5.7	,	2.8	,	4.5	,	1.3	,	0	}	,
{	5.4	,	3.7	,	1.5	,	0.2	,	1	}	,
{	5.2	,	3.4	,	1.4	,	0.2	,	1	}	,
{	5.9	,	3	,	4.2	,	1.5	,	0	}	,
{	5.9	,	3.2	,	4.8	,	1.8	,	0	}	,
{	6.7	,	3.1	,	4.4	,	1.4	,	0	}	,
{	6.3	,	2.5	,	4.9	,	1.5	,	0	}	,
{	5.1	,	3.5	,	1.4	,	0.3	,	1	}	,
{	5.8	,	2.7	,	4.1	,	1	,	0	}	,
{	4.9	,	3.1	,	1.5	,	0.1	,	1	}	,
{	5.1	,	3.3	,	1.7	,	0.5	,	1	}	,
{	6.1	,	2.8	,	4	,	1.3	,	0	}	,
{	5	,	3.6	,	1.4	,	0.2	,	1	}	,
{	5.2	,	4.1	,	1.5	,	0.1	,	1	}	,
{	5.1	,	3.8	,	1.5	,	0.3	,	1	}	,
{	6	,	2.2	,	4	,	1	,	0	}	,
{	6.5	,	2.8	,	4.6	,	1.5	,	0	}	,
{	4.8	,	3.4	,	1.6	,	0.2	,	1	}	,
{	4.8	,	3.1	,	1.6	,	0.2	,	1	}	,
{	5.6	,	2.5	,	3.9	,	1.1	,	0	}	,
{	4.9	,	3	,	1.4	,	0.2	,	1	}	,
{	4.6	,	3.6	,	1	,	0.2	,	1	}	,
{	5.4	,	3.9	,	1.3	,	0.4	,	1	}	,
{	4.9	,	2.4	,	3.3	,	1	,	0	}	,
{	4.9	,	3.1	,	1.5	,	0.1	,	1	}	,
{	5	,	3.4	,	1.6	,	0.4	,	1	}	,
{	6.3	,	3.3	,	4.7	,	1.6	,	0	}	,
{	6.9	,	3.1	,	4.9	,	1.5	,	0	}	,
{	6.1	,	2.9	,	4.7	,	1.4	,	0	}	,
{	4.8	,	3.4	,	1.9	,	0.2	,	1	}	,
{	4.9	,	3.1	,	1.5	,	0.1	,	1	}	,
{	4.8	,	3	,	1.4	,	0.1	,	1	}	,
{	5.1	,	3.7	,	1.5	,	0.4	,	1	}	,
{	5	,	3.5	,	1.3	,	0.3	,	1	}	,
{	5	,	3	,	1.6	,	0.2	,	1	}	,
{	4.4	,	3.2	,	1.3	,	0.2	,	1	}	,
{	4.7	,	3.2	,	1.3	,	0.2	,	1	}	,
{	5.1	,	3.8	,	1.9	,	0.4	,	1	}	,
{	5.6	,	3	,	4.5	,	1.5	,	0	}	,
{	4.3	,	3	,	1.1	,	0.1	,	1	}	,
{	5.2	,	3.5	,	1.5	,	0.2	,	1	}	,
{	5	,	3.4	,	1.5	,	0.2	,	1	}	,
{	5	,	3.5	,	1.6	,	0.6	,	1	}	,
{	5.1	,	3.4	,	1.5	,	0.2	,	1	}	,
{	5.5	,	3.5	,	1.3	,	0.2	,	1	}	,
{	5.4	,	3.4	,	1.7	,	0.2	,	1	}	,
{	5.8	,	4	,	1.2	,	0.2	,	1	}	,
{	4.5	,	2.3	,	1.3	,	0.3	,	1	}	,
{	7	,	3.2	,	4.7	,	1.4	,	0	}	,
{	4.6	,	3.1	,	1.5	,	0.2	,	1	}	,
{	5.5	,	4.2	,	1.4	,	0.2	,	1	}	,
{	5.7	,	4.4	,	1.5	,	0.4	,	1	}	,
{	4.4	,	2.9	,	1.4	,	0.2	,	1	}	,
{	5.2	,	2.7	,	3.9	,	1.4	,	0	}	,
{	5.1	,	3.5	,	1.4	,	0.2	,	1	}	,
{	6.2	,	2.2	,	4.5	,	1.5	,	0	}	,
{	5.7	,	3.8	,	1.7	,	0.3	,	1	}	

};

int main()
{

    //获取行列数
    int lines = sizeof(sample) / sizeof(sample[0][0]);
    int row = sizeof(sample) / sizeof(sample[0]);
    int column = lines / row;

    Vector<Data> data;
    for (int i = 0; i < row; i++)
    {
        Data t;
        for (int j = 0; j < column - 1; j++)
            t.x.push_back(sample[i][j]);
        t.y.push_back(sample[i][column - 1]);
        data.push_back(t);
    }
    BP* bp = new BP();
    bp->GetData(data);
    bp->Train();

    while (1)
    {
        Vector<Type> in;
        for (int i = 0; i < column - 1; i++)
        {
            Type v;
            scanf_s("%lf", &v);
            in.push_back(v);
        }
        Vector<Type> ou;
        ou = bp->ForeCast(in);
        printf("%lf\n", ou[0]);
    }
    return 0;
}